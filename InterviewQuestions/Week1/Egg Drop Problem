Suppose that you have an n-story building (with floors 1 through n) and plenty of eggs. 
An egg breaks if it is dropped from floor T or higher and does not break otherwise. 
Your goal is to devise a strategy to determine the value of T given the following limitations on the number of eggs and tosses:

Version 0: 1 egg and <= T tosses
           Drop the egg starting from floor 1 till T. The egg breaks at floor T. (Sequential Search)

Version 1: 1 lgn eggs and 1 lgn tosses
           Eg: If n is 16, you have 4 eggs and 4 tosses. Divide interval into half. Drop an egg from the 8th floor. If it breaks, 
           drop from the 4th (8/2) floor, else drop from 12th(8+(16-8)/2) floor. Go on dividing the interval into half. 
           
Version 2: lg T eggs and 2 lgT tosses
           Eg: Drop the at floor 1, 2, 4, 8, 16,â€¦ until it breaks
           If the egg drop at level 16, that mean T must be between 8 and 16 (between the floor of last toss and the floor of this toss). 
           You've used 1 egg
           Perform a binary search from floor 8 to 16.
           The binary search will cost another lgT tosses
           Because you do binary search on half of the floor (8 to 16 in this case, not all 16 floors), you need to use lgT - 1 eggs.
           In total, it will take you ~lgT eggs and ~2lgT tosses.


Version 3: 2eggs and 2 sqrt(n) tosses
           Eg: Let the number of floors be 100. Then sqroot(100) is 10. Start dropping the eggs from floor 10, increments of 10 floors
           each. This way, the max we tosses are sqrt(100) i.e -> 10. 
           Suppose egg breakes between 80-90 floor, then, we can use the other egg and try a sequential search from 80-89 floor.
           That way, we are using 2 eggs, and 2* sqrt(n) tosses. 
           
           Improvement: If n is 100, we can start with floor 14. Sum of 1st 14 natural numbers >=100. (n(n+1)/2)=100 (ceil). 
           We start with 14. If egg breaks, we have 13 more tosses to check sequentially. (sqrt(2n) tosses). If it doesn't break,
           we check at floor (14+13=27). We have used up 2 tosses(14 floor and 27th). We can try sequrntial search from floor 15 to 26.(12 tosses).
           This way, we can use 2 eggs and sqrt(2n) tosses.
        
      
 Version 4: 2 eggs and c sqrt(T) tosses. c=2*(sqrt(2)). 
            Eg: Drop eggs starting from floors - 1,3,6,10,15,21,28..... (Where 6 is sum of 1st 3 nat num, and so on....).
            If the egg breaks at T, then we would have used up 't'tosses. Here, T(floor)=(t(t+1))/2. For large t, we can 
            say that T ~ t^2/2. Suppose egg breaks at floor 28, we would have used up 7 tosses. Now we need to check interval from 
            floor 21 to 28. (Max <=7 tosses). Hence, we would use up another 't' tosses. 
            In total, we use up 2t (t+t) tosses to find the exact floor.
            Since T ~ t^2/2, we can say that 't' ~ sqrt(2T). 
            Hence, 2t = 2(sqrt(2T))
            
            Therefore, we can say that 2(sqrt(2T)) tosses are required with 2 eggs. 
